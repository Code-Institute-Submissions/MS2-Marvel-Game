@import url("https://fonts.googleapis.com/css2?family=Anton&display=swap");

body {
  font-family: "Anton", sans-serif;
  
}

header {
  background-color: rgb(0, 0, 0, 0.9);
  
}

#marvel-logo {
  width: 300px;
  border: solid 1px;
  border-color: #ffffff;
  animation-name: animateappear;
  animation-duration: 2s;
}

.marvel-background:after {
  content: "";
  background: url("../images/marvel-background.jpg") no-repeat center center;
  position: absolute;
  background-size: cover;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  opacity: 0.4;
  /* This code credited to - https://stackoverflow.com/questions/23254346/how-can-i-change-background-image-opacity-without-changing-on-div-content*/
}

.card-game-title {
  background-color: #236bc4;
  color: #ffffff;
  font-size: 40px;
  font-stretch: ultra-expanded;
  border: solid 1px #ffffff;
  animation-name: animateappear;
  animation-duration: 2s;
  width: 300px;
}

/* Main menu - "Select a Game" */
#main-menu {
    width: 280px;
    height: 280px;
    background-color: #236bc4;
    color: white;
    border: solid 1px;
    border-color: white;
    opacity: 0.96;
    animation-name: animatetop;
    animation-duration: 1s;
}

/* card menu window */
#card-menu {
    width: 280px;
    height: 500px;
    background-color: rgb(7, 19, 34);
    color: white;
    border: solid 1px;
    border-color: white;
    opacity: 0.96;
    animation-name: animatetop;
    animation-duration: 1s;
}

.btn {
  font-size: 22px;
}

/* Difficulty select window - changed the model to be a normal menu instead, can delete this! */
.modal-content {
  position: absolute;
  width: 280px;
  height: 340px;
  background-color: rgb(7, 19, 34);
  color: white;
  border: solid 1px;
  border-color: white;
  z-index: 100000;
  animation-name: animatetop;
  animation-duration: 1s;
}

.hide {
    display: none;
}

/* The close button on the modal */
.close {
  color: white;
  float: left;
  opacity: 1;
  border: none;
  font-weight: 500;
  text-shadow: none;
  flex: none;
  font-size: 30px;

}

.close:hover,
.close:focus {
  color: white;
  text-decoration: none;
  cursor: pointer;
}

@keyframes animatetop {     /* taken from w3schools - to make an element appear from the top and fade in-like effect*/ 
  from {
    top: -400px;
    opacity: 0;
  }
  to {
    top: 0;
    opacity: 1;
  }
}

@keyframes animateappear {     /* taken from w3schools */
  from {
    opacity: 0;
  }
  to {
    top: 0;
    opacity: 1;
  }
}



.center-container {
  /* test for centering the modal and main menu - https://stackoverflow.com/questions/396145/how-to-vertically-center-a-div-for-all-browsers*/
  position: relative;
  perspective: 500px;  /* 3d perspective, will tell us that the element is 500px away from the game container */
}

.absolute-center {
  /* test for centering the modal and main menu - https://stackoverflow.com/questions/396145/how-to-vertically-center-a-div-for-all-browsers*/
  overflow: auto;
  margin: auto;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}
  /* this is the exit button on the card-game page */
.exit-button {
    position: absolute;
    font-size: 22px;
    background-color: orange;
    color: black;
    border: solid 1px white;
    line-height: 1.1;
    z-index: 1000;
}

.exit-button:hover {
  color: white;
}


/* Card game page and contents */

.card-game-container {
    background-color: rgba(31, 8, 8, 0.98);
    border: solid 1px white;
    max-width: 600px;
    animation-name: animateappear;
    animation-duration: 2s;
}

.card-container {
    display: grid;
    grid-template-columns: repeat(5, auto);      /* 4 columns that will automatically autosize themselves */
    grid-gap: 10px;
}

.card-game-info-container {                     /* non-bootstrap grid system to make the card shuffle functional */
    grid-column: 1 / -1;
    display: flex;
    justify-content: space-between;
}

.card-game-info {
    font-size: 30px;
    color: white;
}

.attempts {
    text-align: right;
}

.card {
    position: relative;
    height: 140px;
    min-width: 68px;
    padding-right: 0;
    padding-left: 0;
    background-color: transparent; 
}

.card-face {
    position: absolute;
    height: 140px;
    width: 80px;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    border: solid 1px white;
    backface-visibility: hidden;
    transition: transform 500ms ease-in-out;
}

.card-front {
    background-color: white;   
    border: solid 1px black;
    transform: rotateY(180deg);
}

.card-back {
    background-color: transparent;     /* TESTING TO SEE IF THIS WILL*/  
    transform: rotateY(0);
    
}

.card.visible .card-back {
    transform: rotateY(-180deg);
}

.card.visible .card-front {
    transform: rotateY(0); 
}

.card.matched .card-value {
    animation: dance 2s linear infinite 500ms; /* when there is a match of cards, both cards will "dance" for 2 seconds and infinitely, with a delay of 500ms as this is the time it takes for the card to rotate*/
}

.overlay-text, .enter-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    justify-content: center;
    align-items: center;
    z-index: 100;
    color: white;
}

.overlay-picture {
    width: 50vw;
    max-width: 500px;
}

.overlay-text-small {
    font-size: .7em;
}

.overlay-text.visible, .enter-overlay.visible {
    display: flex;
    flex-direction: column;
    animation: overlay-grow 500ms forwards;
}

@keyframes  overlay-grow {
    from {
        background-color: black;
        font-size: 0;
    }
    to {
        background-color: rgb(0, 0, 0, 0.95);
        font-size: 80px;
    }
}

@keyframes dance {              /* zoom in and out animation for when cards are matched*/
    0%, 100% {
        transform: scale(0.9);
    }
    25% {
        transform: scale(1);
    }
    75% {
        transform: scale(1.1);
    }
}

.card-value {
    height: 80px;
    width: auto;
    transform: scale(1.1);
}

.question-mark {            /* This is the back of the card */
    height: 140px;
    width: 90px;
}

.card:hover {
    transform: rotate(-10deg);
    transition: transform 1s;
}

.card-front:hover .card-value {
    transform: scale(1);
    transition: transform 1s;
}

.card-back:hover .question-mark {
    transform: scale(1.1);
    transition: transform 1s;
}



/* CARD PICTURES NOT WORKING AS CLASSES!!!! */
.black-panther {
    background-image: url('../images/black-panther.png');
    height: 100%;
    width: 100%;
    background-size: 100%;
	background-repeat: no-repeat;
	background-position: center;
}

.spiderman {
    background-image: url('../images/spiderman.png');
    height: 100%;
    width: 100%;
    background-size: 100%;
	background-repeat: no-repeat;
	background-position: center;
	
}

.black-widow {
    background-image: url('../images/black-widow.png');
    height: 100%;
    width: 100%;
    background-size: 100%;
	background-repeat: no-repeat;
	background-position: center;
}

.cap-america {
    background-image: url('../images/cap-america.png');
    height: 100%;
    width: 100%;
    background-size: 100%;
	background-repeat: no-repeat;
	background-position: center;
}

.hulk {
    background-image: url('../images/hulk.png');
    height: 100%;
    width: 100%;
    background-size: 100%;
	background-repeat: no-repeat;
	background-position: center;
}

.ironman {
    background-image: url('../images/ironman.png');
    height: 100%;
    width: 100%;
    background-size: 100%;
	background-repeat: no-repeat;
	background-position: center;
}

.thor {
    background-image: url('../images/thor.png');
    height: 100%;
    width: 100%;
    background-size: 100%;
	background-repeat: no-repeat;
	background-position: center;
}

.wolverine {
    background-image: url('../images/wolverine.png');
    height: 100%;
    width: 100%;
    background-size: 100%;
	background-repeat: no-repeat;
	background-position: center;
}

/* Battle Page CSS */

.battle-container {
    background-color: rgb(56, 21, 21);
    border: solid 1px black;
    opacity: 0.95;
    height: 80vh;
    animation-name: animateappear;
    animation-duration: 2s;
}

.spiderman-battle {   /*spiderman image*/
    width: 20vw;
    max-width: 230px;
    /* margin-top: 50px; */
    /*margin-top: 200px;*/
}

.green-goblin {        /*Green goblin image*/
    width: 20vw;
    max-width: 230px;
    /* margin-top: 50px; */
    /* margin-top: 200px; */
    
}



#bottomRow {
    padding: 20px;
    color: white;
    text-align: center;
}

.stats {
    height: 200px;
    width: 200px;
    visibility: hidden;
}

.characterLabel {
    color: white;
    font-size: 30px;
}

.healthLabel {
    color: white;
    font-size: 20px;
}

.movesLabel {
    color: white;
    font-size: 18px;
}

.buttonStyle {    /* these are the moves buttons */
    background-color: white;
    border: 3px solid black;
}

.buttonStyle:hover {
    background-color: black;
    color: white;
    border: 3px solid white;
}

.hpBorder {
    width: 150px;
    height: 30px;
    border: 3px solid black;
}

.hpBar {
    width: 144px;               /*this is to house the green hp bar inside the hpBorder, border is 3px so 2*3 = 6px */
    height: 24px;
    background-color: green;
}

.volume-icon {
    position: absolute;
    font-size: 40px;
    color: white;
    background: transparent;
    border: none;
}

.volume-icon:hover {
    color: grey;
}



/* Battle Animations */


/*TESTING HOVER */
.spiderman-battle:hover {
    animation: webSwingAnimation 1s;
  /*animation-iteration-count: 1; */
}

.punchAnimation {
  animation: punchAnimation 1s;
}

@keyframes punchAnimation {             /* w3 schools animation demo*/
    /* 0% { transform: translate(1px, 1px) rotate(0deg); }
  10% { transform: translate(-1px, -2px) rotate(-1deg); }
  20% { transform: translate(-3px, 0px) rotate(1deg); }
  30% { transform: translate(3px, 2px) rotate(0deg); }
  40% { transform: translate(1px, -1px) rotate(1deg); }
  50% { transform: translate(-1px, 2px) rotate(-1deg); }
  60% { transform: translate(-3px, 1px) rotate(0deg); }
  70% { transform: translate(3px, 1px) rotate(-1deg); }
  80% { transform: translate(-1px, -1px) rotate(1deg); }
  90% { transform: translate(1px, 2px) rotate(0deg); }
  100% { transform: translate(1px, -2px) rotate(-1deg); } */

    0% { transform: translate(0px, 0px) rotate(0deg); }
    20% { transform: translate(6px, 0px) rotate(5deg); }
    100% { transform: translate(0px, 0px) rotate(0deg); }
}


.webShootAnimation {
    animation: webShootAnimation 1s;
}

@keyframes webShootAnimation {
    0% { transform: translate(0px, 0px) rotate(0deg); }
    10% { transform: translate(-2px, 0px) rotate(4deg); }
    20% { transform: translate(4px, 0px) rotate(-2deg); }
    30% { transform: translate(4px, 0px) rotate(2deg); }
    40% { transform: translate(4px, 0px) rotate(-1deg); }
    50% { transform: translate(4px, 0px) rotate(1deg); }
    55% { transform: translate(4px, 0px) rotate(-1deg); }
    60% { transform: translate(4px, 0px) rotate(1deg); }
    65% { transform: translate(4px, 0px) rotate(-1deg); }
    70% { transform: translate(0px, 0px) rotate(0deg); }
    75% { transform: translate(4px, 0px) rotate(1deg); }
    80% { transform: translate(4px, 0px) rotate(-1deg); }
    85% { transform: translate(0px, 0px) rotate(0deg); }
    100% { transform: translate(4px, 0px) rotate(1deg); }
}

.webSwingAnimation {
    animation: webSwingAnimation 1.4s;
}

@keyframes webSwingAnimation {
    0% { transform: translate(0px, 0px) rotate(0deg); }
    10% { transform: translate(-2px, -5px) rotate(1deg); }
    20% { transform: translate(-3px, -6px) rotate(2deg); }
    30% { transform: translate(-4px, -7px) rotate(3deg); }
    40% { transform: translate(-5px, -8px) rotate(3deg); }
    50% { transform: translate(-6px, -15px) rotate(4deg); }
    75% { transform: translate(-2px, -5px) rotate(1deg); }
    80% { transform: translate(2px, 0px) rotate(0deg); }
    85% { transform: translate(10px, -3px) rotate(-3deg); }
    100% { transform: translate(20px, -6px) rotate(-4deg); }
}
